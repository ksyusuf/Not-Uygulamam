name: Frontend CI Denemesi

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Reponun Son Halini Çek
        uses: actions/checkout@v4

      - name: Node.js Kurulumu
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Bağımlılıkları Yükle
        working-directory: ./client
        run: npm ci

      - name: Build Al
        working-directory: ./client
        run: npm run build

      - name: Testleri Çalıştır
        working-directory: ./client
        run: npm test -- --ci --updateSnapshot=false

      - name: Deploy to Vercel (only if tests pass)
        if: success()  # Bu adım sadece testler başarılı olduğunda çalışır
        run: |
          npm install -g vercel
          vercel --prod --domain not-uygulamasi-client.vercel.app --token ${{ secrets.VERCEL_TOKEN }} --confirm

  Deploy-Preview:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}